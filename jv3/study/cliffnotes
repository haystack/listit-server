
python manage.py shell

## startup
from django.contrib.auth.models import User
from jv3.models import *
from jv3.utils import *
import jv3.study.content_analysis as ca
import jv3.study.ca_datetime as cadt
import jv3.study.ca_sigscroll as cass
import jv3.study.ca_load as cal
import jv3.study.ca_plot as cap
import rpy2
import rpy2.robjects as ro
from jv3.study.study import *
from numpy import array
r = ro.r
em = User.objects.filter(email="emax@csail.mit.edu")[0]
gv = User.objects.filter(email="gvargas@mit.edu")[0]
c = lambda vv : apply(r.c,vv)


## consenting users 
[ u for u in User.objects.all() if is_consenting_study2(u)]

## consenting notes
n = Note.objects.filter( owner__in=[ u for u in User.objects.all() if is_consenting_study2(u)] )

## sort top users
us = [u for u in User.objects.all() if is_consenting_study2(u)]
un = dict([(u.id,u.note_owner.all().count()) for u in us])
us.sort(lambda a,b: un[b.id] - un[a.id])
us[0:10]

## sampling notes
rn = cal.random_notes(25000)

## content features
x,y = ca.notes_to_features(rn,False,ca.content_features)

## import a spreadsheet that has already been coded
renotes,cols = cal.import_notes_csv('/biggie/listit/study2010/wolfe-kp-2.5k.csv')
x,y = ca.notes_to_features(renotes,False)

## loading marked up spreadsheet

>>> notes,cols = cal.import_notes_csv('/biggie/listit/study2010/exported-2500-subset-CODED-kp-w-b.csv')
# then "notes" will have all the notes you loaded from the database as NOTES VALUES


# then "cols" will contain the actual spreadsheet; if you want only the kp TODO NOTE VALUES:
[ [n for n in renotes if n["id"] == int(row[0])][0] for row in cols if row[3] == '1' ]

# then "cols" will contain the actual spreadsheet; if you want only the wolfe TODO NOTE VALUES:
[ [n for n in renotes if n["id"] == int(row[0])][0] for row in cols if row[4] == '1' ]

# then "cols" will contain the actual spreadsheet; if you want only the BRENN TODO NOTE VALUES:
[ [n for n in renotes if n["id"] == int(row[0])][0] for row in cols if row[5] == '1' ]

# then "cols" will contain the actual spreadsheet; if you want only the BRENN REF VALUES:
[ [n for n in renotes if n["id"] == int(row[0])][0] for row in cols if row[6] == '1' ]








## NOTEWISE revisitation curves
## consenting users 
u2 = [ u for u in User.objects.all() if is_consenting_study2(u)]
u1 = [ u for u in User.objects.all() if is_consenting_study1(u)]

## consenting notes
n1 = Note.objects.filter( owner__in=[ u for u in User.objects.all() if is_consenting_study1(u)] )
n2 = Note.objects.filter( owner__in=[ u for u in User.objects.all() if is_consenting_study2(u)] )
ns = [ca._note_instance_to_value(n) for n in cal.filter_notes( list(set(n1).union(n2)) ) ]
nfk,nf = ca.notes_to_features(ns,False)
## perform histogram/stats on ALL features
ca.feature_hists(nfk,nf)

cass.select_dudes_to_revisit(ns)
