## Functions for manually looking at/analyzing notes
def look_at_notes(notes):
    i = 0
    count = 0
    for note in notes:
        i+=1
        if i % 10 == 0:
            countAdd = input("# items?: ")
            if countAdd == -1:
                return count
            print("------------------------------------\n")
        print note.owner.id, ', ', note.jid
        print note.contents, '\n'
    print( "Notes Looked At: ", i, ", count = ", count)


def compile_ver_from_users(userArr):
    verDict = {} ## has->  ver:(living, dead),   <-entries
    verLiveSum = 0
    verDeadSum = 0
    for user in userArr:
        userN = Note.objects.filter(owner=user)
        for note in userN:
            if note.jid == -1:
                continue
            ver = ActivityLog.objects.filter(owner=user, noteid=note.jid, action='note-edit').count()
            i = 1 if note.deleted else 0
            if ver in verDict:
                verDict[ver][i] += 1     ## increment 0th position if alive, 1st if dead
            else:
                verDict[ver] = [1-i, i]  ## Deleted(i=1) => (0,1) vs Living = (1,0)
            if note.deleted:
                verDeadSum+=1
            else:
                verLiveSum+=1
        pass
    return [verDict, verLiveSum, verDeadSum]


##>>> verInfo
##[{0: [33491, 36171], 1: [2522, 8295], 2: [1673, 3140], 3: [537, 1128], 4: [524, 769], 5: [212, 316], 6: [200, 279], 7: [105, 162], 8: [92, 109], 9: [74, 82], 10: [58, 72], 11: [33, 52], 12: [31, 37], 13: [29, 36], 14: [26, 23], 15: [7, 36], 16: [18, 19], 17: [15, 11], 18: [13, 10], 19: [9, 5], 20: [7, 9], 21: [4, 9], 22: [4, 5], 23: [10, 6], 24: [4, 10], 25: [9, 4], 26: [4, 3], 27: [7, 5], 28: [7, 3], 29: [2, 1], 30: [6, 2], 31: [1, 3], 32: [3, 2], 33: [0, 3], 34: [3, 0], 283: [0, 2], 36: [3, 2], 37: [1, 0], 38: [0, 1], 39: [3, 5], 40: [2, 0], 41: [1, 1], 42: [1, 0], 44: [1, 0], 45: [2, 1], 46: [1, 1], 1053: [0, 1], 176: [1, 0], 136: [0, 1], 50: [2, 1], 51: [2, 2], 53: [0, 1], 54: [0, 1], 55: [1, 1], 58: [4, 0], 61: [2, 0], 62: [1, 1], 64: [1, 0], 65: [1, 0], 322: [2, 0], 68: [0, 5], 49: [1, 0], 70: [1, 1], 72: [0, 1], 1079: [0, 1], 80: [0, 1], 35: [1, 2], 92: [1, 0], 93: [0, 1], 222: [1, 0], 144: [0, 1], 99: [0, 2], 100: [1, 0], 102: [1, 0], 537: [0, 1], 235: [1, 0], 112: [1, 0], 115: [2, 0], 244: [1, 0], 120: [1, 0], 106: [0, 1]}, 39785, 50856]
## verInfo[0]
##{0: [33491, 36171], 1: [2522, 8295], 2: [1673, 3140], 3: [537, 1128], 4: [524, 769], 5: [212, 316], 6: [200, 279], 7: [105, 162], 8: [92, 109], 9: [74, 82], 10: [58, 72], 11: [33, 52], 12: [31, 37], 13: [29, 36], 14: [26, 23], 15: [7, 36], 16: [18, 19], 17: [15, 11], 18: [13, 10], 19: [9, 5], 20: [7, 9], 21: [4, 9], 22: [4, 5], 23: [10, 6], 24: [4, 10], 25: [9, 4], 26: [4, 3], 27: [7, 5], 28: [7, 3], 29: [2, 1], 30: [6, 2], 31: [1, 3], 32: [3, 2], 33: [0, 3], 34: [3, 0], 283: [0, 2], 36: [3, 2], 37: [1, 0], 38: [0, 1], 39: [3, 5], 40: [2, 0], 41: [1, 1], 42: [1, 0], 44: [1, 0], 45: [2, 1], 46: [1, 1], 1053: [0, 1], 176: [1, 0], 136: [0, 1], 50: [2, 1], 51: [2, 2], 53: [0, 1], 54: [0, 1], 55: [1, 1], 58: [4, 0], 61: [2, 0], 62: [1, 1], 64: [1, 0], 65: [1, 0], 322: [2, 0], 68: [0, 5], 49: [1, 0], 70: [1, 1], 72: [0, 1], 1079: [0, 1], 80: [0, 1], 35: [1, 2], 92: [1, 0], 93: [0, 1], 222: [1, 0], 144: [0, 1], 99: [0, 2], 100: [1, 0], 102: [1, 0], 537: [0, 1], 235: [1, 0], 112: [1, 0], 115: [2, 0], 244: [1, 0], 120: [1, 0], 106: [0, 1]}

## verInfo[1]
##39785
##>>> verInfo[2]
##50856
